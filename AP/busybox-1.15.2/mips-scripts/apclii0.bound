#!/bin/sh
# udhcpc bound script

RESOLV_CONF="/etc/udhcpc/resolv.conf"

DHCPC_LOG=/var/log/dhcpc.log
DHCPC_TMP=/tmp/dhcpc.tmp

#create include file
#/bin/create_flash.sh

#include file
. /var/flash.inc
#EDX Timmy start
. /bin/scriptlib.sh
. /web/FUNCTION_SCRIPT
. /var/flash.inc


echo "######## apclii0.bound ########"
echo "$ip" > /tmp/apclii0IP


# for _HIGHSPEED_WIFI_REPEATER_ parameter
echo "$router" > /tmp/apclii0_ROUTER
echo "$dns" > /tmp/apclii0_DNS
echo "$subnet" > /tmp/apclii0_SUBNET
CONF_TMP=/tmp/apclii0IP
rang1="`cat ${CONF_TMP}|cut -f 2 -d = |cut -f 1 -d .`"
rang2="`cat ${CONF_TMP}|cut -f 2 -d = |cut -f 2 -d .`"
rang3="`cat ${CONF_TMP}|cut -f 2 -d = |cut -f 3 -d .`"
echo "${rang1}.${rang2}.${rang3}.42" > /tmp/apclii0_DHCPstart
echo "${rang1}.${rang2}.${rang3}.62" > /tmp/apclii0_DHCPend
# end


echo "1" > /tmp/wispConnect
if [ -f /tmp/SKipAddRoute ]; then #EDX . fixed same subnet let connect test redirect fail
  killall udhcpc
  kill -9 `pidof udhcpc`
  echo ">> SKip add route!"
  exit 1
fi

wanDetect=0

if [ "$_IQv2_" = "y" -a "$IQSET_DISABLE" = "0" ]; then 
	if [ -e /tmp/pause_iQsetup ]; then
		wanDetect=`cat /tmp/pause_iQsetup`
	else
		wanDetect=0
	fi
fi


if [ "$WAN_MODE" = "0" -a "$wanDetect" = 0 ]; then
	lan_ip="`ifconfig br0 | grep \"inet addr\" | cut -f 2 -d : | cut -f 1 -d \" \"`"
	lan_ip1="`echo $lan_ip | cut -f 1 -d .`"
	lan_ip2="`echo $lan_ip | cut -f 2 -d .`"
	lan_ip3="`echo $lan_ip | cut -f 3 -d .`"
	lan_ip4="`echo $lan_ip | cut -f 4 -d .`"
	wan_ip1="`echo $ip | cut -f 1 -d .`"
	wan_ip2="`echo $ip | cut -f 2 -d .`"
	wan_ip3="`echo $ip | cut -f 3 -d .`"

	if [ "${wan_ip1}.${wan_ip2}.${wan_ip3}" = "${lan_ip1}.${lan_ip2}.${lan_ip3}" ]; then
		if [ "${wan_ip3}" = "2" ]; then
			lan_ip3=3
		elif [ "${wan_ip3}" = "3" ]; then
			lan_ip3=2
		else
			lan_ip3=2
		fi
		ifconfig br0 ${lan_ip1}.${lan_ip2}.${lan_ip3}.${lan_ip4}
		killall udhcpd
		CONF_FILE=/var/udhcpd.conf
		start="`cat ${CONF_FILE}|grep \"start\" |cut -f 2 -d \" \"|cut -f 4 -d .`"
		end="`cat ${CONF_FILE}|grep \"end\" |cut -f 2 -d \" \"|cut -f 4 -d .`"
		echo "interface br0" > $CONF_FILE
		echo "start ${lan_ip1}.${lan_ip2}.${lan_ip3}.${start}" >> $CONF_FILE
		echo "end ${lan_ip1}.${lan_ip2}.${lan_ip3}.${end}" >> $CONF_FILE
		echo "opt subnet $SUBNET_MASK" >> $CONF_FILE
		echo "opt router ${lan_ip1}.${lan_ip2}.${lan_ip3}.${lan_ip4}"  >> $CONF_FILE
		echo "opt dns ${lan_ip1}.${lan_ip2}.${lan_ip3}.${lan_ip4}"  >> $CONF_FILE
		echo "option lease $LAN_LEASE_TIME" >> $CONF_FILE
		flash set IP_ADDR ${lan_ip1}.${lan_ip2}.${lan_ip3}.${lan_ip4}
		flash set DHCP_CLIENT_START ${lan_ip1}.${lan_ip2}.${lan_ip3}.${start}
		flash set DHCP_CLIENT_END ${lan_ip1}.${lan_ip2}.${lan_ip3}.${end}

		echo "==> WAN IP conflict with LAN IP <=="
		#讓網路斷線在連線,目的為了讓pc重新取得ip
		ra0En="`ifconfig | grep ra0`"
		rai0En="`ifconfig | grep rai0`"

		ifconfig br0 down
		if [ "$ra0En" != "" ]; then
			iwpriv ra0 set RadioOn=0
		fi
		if [ "$rai0En" != "" ]; then
			iwpriv rai0 set RadioOn=0
		fi
		if [ "$_MODEL_" = "BR6278AC" ]; then
			mii_mgr -s -p 1 -r 0 -v 3900
			mii_mgr -s -p 2 -r 0 -v 3900
			mii_mgr -s -p 3 -r 0 -v 3900
		else
			mii_mgr -s -p 1 -r 0 -v 3900
			mii_mgr -s -p 2 -r 0 -v 3900
			mii_mgr -s -p 3 -r 0 -v 3900
			mii_mgr -s -p 4 -r 0 -v 3900
		fi
		sleep 3
		if [ "$_MODEL_" = "BR6278AC" ]; then
			mii_mgr -s -p 1 -r 0 -v 3300
			mii_mgr -s -p 2 -r 0 -v 3300
			mii_mgr -s -p 3 -r 0 -v 3300
		else
			mii_mgr -s -p 1 -r 0 -v 3300
			mii_mgr -s -p 2 -r 0 -v 3300
			mii_mgr -s -p 3 -r 0 -v 3300
			mii_mgr -s -p 4 -r 0 -v 3300
		fi
		if [ "$ra0En" != "" ]; then
			iwpriv ra0 set RadioOn=1
		fi
		if [ "$rai0En" != "" ]; then
			iwpriv rai0 set RadioOn=1
		fi
		sleep 3
		ifconfig br0 up

		udhcpd $CONF_FILE

		echo "==> LAN renew IP <=="
		reloadFlash

		killall dnrd
		/bin/dnrd.sh

		if [ "$_IQv2_" = "y" -a "$IQSET_DISABLE" = "0" ]; then 
			killall run_iqv2.sh
			sh /tmp/iptables_release.sh
			kill -SIGUSR2 `pidof dnrd`
			scriptlib_util.sh iQsetup_set
			/bin/run_iqv2.sh &		
		fi
	fi
fi

rm -f $DHCPC_TMP

echo "" >> $DHCPC_TMP
NOW_TIME=`date +"%F %T"`
echo "# [$NOW_TIME]: start DHCP client log #" >> $DHCPC_TMP
echo "" >> $DHCPC_TMP

cat /tmp/pktmask >> $DHCPC_TMP

echo "orig_subnet=$subnet" >> $DHCPC_TMP

if [ -f $DHCPC_LOG ]; then
	#include dhcpc old setting
	. $DHCPC_LOG
	
	if [ "$subnet" = "0.0.0.0" ]; then
		subnet=$OLD_SUBNET
	fi
fi

echo "OLD_IP=$ip" >> $DHCPC_TMP
echo "OLD_BROADCAST=$broadcast" >> $DHCPC_TMP
echo "OLD_SUBNET=$subnet" >> $DHCPC_TMP
echo "OLD_ROUTER=\"$router\"" >> $DHCPC_TMP
echo "OLD_DOMAIN=$domain" >> $DHCPC_TMP
echo "OLD_DNS=\"$dns\"" >> $DHCPC_TMP
echo "" >> $DHCPC_TMP

cp -f $DHCPC_TMP $DHCPC_LOG

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

/sbin/ifconfig $interface $ip $BROADCAST $NETMASK

# Lance 2004.01.06
echo -n > $RESOLV_CONF
[ -n "$domain" ] && echo domain $domain >> $RESOLV_CONF

for i in $dns
do
    echo adding dns $i
    echo nameserver $i >> $RESOLV_CONF
done
# end

if [ "$router" ]
then
	/bin/del-route.sh
	echo "deleting routers"
	while route del -net default gw 0.0.0.0 dev $interface
	do :
	done

	for i in $router
	do
		route add -net default gw $i dev $interface

		/bin/cat /etc/resolv.master /etc/udhcpc/resolv.conf > /etc/resolv.conf 2> /dev/null

		# PPTP
		if [ "$WAN_MODE" = "3" ]; then
			route add -host $PPTP_GATEWAY gw $i
			break;
		fi
		# L2TP
		if [ "$WAN_MODE" = "6" ]; then
			route add -host $L2TP_GATEWAY gw $i
			break;
		fi
		
#		route add -net default gw $i dev $interface
		break
	done
fi

#echo -n > $RESOLV_CONF
#[ -n "$domain" ] && echo domain $domain >> $RESOLV_CONF

#for i in $dns
#do
#    echo adding dns $i
#    echo nameserver $i >> $RESOLV_CONF
#done

if [ "$WAN_MODE" = "0" ]; then
	/etc/ppp/ip-up dhcpc
fi

killall -9 sntp.sh
sleep 3
/bin/sntp.sh &
echo ">> apclii0.bound update system time"
